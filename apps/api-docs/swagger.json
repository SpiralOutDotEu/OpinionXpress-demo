{
  "openapi": "3.0.0",
  "info": {
    "title": "OpinionXpress API",
    "description": "API for managing the OpinionXpress.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/groups": {
      "get": {
        "summary": "List all groups",
        "description": "Retrieves a list of all groups.",
        "responses": {
          "200": {
            "description": "List of groups retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new group",
        "description": "Creates a new group in the OpinionXpress contract.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Group created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{groupId}": {
      "get": {
        "summary": "Get a specific group",
        "description": "Retrieves information about a specific group, including its members and depth.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDetail"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        }
      }
    },
    "/members": {
      "post": {
        "summary": "Add a member to a specific group",
        "description": "Adds the commitment of a member to a specific group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMemberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Member added to group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        }
      }
    },
    "/polls/{pollId}": {
      "get": {
        "summary": "Get a specific poll",
        "description": "Retrieves detailed information about a specific poll, including its ID, text, and vote counts.",
        "parameters": [
          {
            "name": "pollId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Poll information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Poll"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        }
      }
    },
    "/polls": {
      "get": {
        "summary": "List all polls",
        "description": "Retrieves a list of all polls.",
        "responses": {
          "200": {
            "description": "List of polls retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Poll"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new poll",
        "description": "Creates a new poll in the OpinionXpress contract.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPollRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Poll created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        }
      }
    },
    "/votes": {
      "post": {
        "summary": "Cast a vote",
        "description": "Casts a vote in a specific poll.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Vote casted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_401"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_500"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Group": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "example": 555501
          },
          "depth": {
            "type": "integer",
            "example": 20
          }
        }
      },
      "NewGroupRequest": {
        "required": [
          "depth",
          "groupId"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "example": 555501
          },
          "depth": {
            "type": "integer",
            "example": 20
          }
        }
      },
      "GroupDetail": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "3326635278627096106160097158002541427724368252229102516311610871385590934252"
            }
          },
          "depth": {
            "type": "integer",
            "example": 20
          }
        }
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "transaction": {
            "type": "string",
            "description": "The transaction hash",
            "example": "0xc0ffee827e6fac3c62dc0f362d12cea0c15c669f0109d7bf525e6f475d17a0a8"
          }
        }
      },
      "NewMemberRequest": {
        "required": [
          "commitment",
          "groupId"
        ],
        "type": "object",
        "properties": {
          "commitment": {
            "type": "string",
            "example": "3326635278627096106160097158002541427724368252229102516311610871385590934252"
          },
          "groupId": {
            "type": "integer",
            "example": 555501
          }
        }
      },
      "Poll": {
        "type": "object",
        "properties": {
          "pollId": {
            "type": "integer",
            "example": 101202
          },
          "text": {
            "type": "string",
            "example": "Do you agree with this?"
          },
          "yesCounter": {
            "type": "integer",
            "example": 254892
          },
          "noCounter": {
            "type": "integer",
            "example": 11254
          }
        }
      },
      "NewPollRequest": {
        "required": [
          "groupIds",
          "pollId",
          "text"
        ],
        "type": "object",
        "properties": {
          "pollId": {
            "type": "integer",
            "example": 101202
          },
          "text": {
            "type": "string",
            "example": "Do you agree with this?"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "VoteRequest": {
        "required": [
          "groupId",
          "merkleTreeRoot",
          "nullifierHash",
          "pollId",
          "proof",
          "vote"
        ],
        "type": "object",
        "properties": {
          "vote": {
            "type": "integer",
            "enum": [
              0,
              1
            ]
          },
          "merkleTreeRoot": {
            "type": "string",
            "example": "7063305584926209010100127691241778307947106084415786739982477638177002416827"
          },
          "nullifierHash": {
            "type": "string",
            "example": "11835278191801483366345860388620735265094450838139041007842802984223317704347"
          },
          "pollId": {
            "type": "integer",
            "example": 101202
          },
          "proof": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "8 long big int strings"
            }
          },
          "groupId": {
            "type": "integer"
          }
        }
      },
      "inline_response_400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad request."
          }
        }
      },
      "inline_response_401": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Authorization information is missing or invalid."
          }
        }
      },
      "inline_response_500": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unexpected server error."
          }
        }
      },
      "inline_response_404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Resource not found."
          }
        }
      }
    },
    "responses": {
      "BadRequestResponse": {
        "description": "Bad request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_400"
            }
          }
        }
      },
      "UnauthorizedResponse": {
        "description": "Authorization information is missing or invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_401"
            }
          }
        }
      },
      "ServerErrorResponse": {
        "description": "Unexpected server error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_500"
            }
          }
        }
      },
      "NotFoundResponse": {
        "description": "Resource not found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_404"
            }
          }
        }
      }
    }
  }
}